# docker-compose.yml
services:
  web:
    build: .
    # PERBAIKAN: Tambahkan konfigurasi untuk WebSocket
    command: >
      gunicorn mochafolk_backend.asgi:application 
      -k uvicorn.workers.UvicornWorker 
      --bind 0.0.0.0:8000 
      --workers 1 
      --timeout 120 
      --keep-alive 2 
      --log-level info
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SECRET_KEY=2=ugfm6g+#=at=006_i8b@j9@7ey5+r8e6sq6ww$8p^_(m!2zn
      - DB_HOST=db
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=Lighthouse1717
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ALLOWED_HOSTS=localhost,127.0.0.1,api.mochafolk.com,app.mochafolk.com,YOUR_VPS_IP
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,https://app.mochafolk.com,wss://api.mochafolk.com
      - CSRF_TRUSTED_ORIGINS=https://api.mochafolk.com,https://app.mochafolk.com
      - FRONTEND_URL=https://app.mochafolk.com
    # TAMBAHAN: Pastikan container bisa akses network
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Lighthouse1717
    networks:
      - app-network

  redis:
    image: redis:6.2-alpine
    networks:
      - app-network

volumes:
  postgres_data:

# TAMBAHAN: Definisikan network
networks:
  app-network:
    driver: bridge